// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
//    >> ngx-media-breakpoint-up(480, (480: 480px, 600: 600px, 840: 840px))
//    @media (min-width: 480px) { }
@mixin ngx-media-breakpoint-up($name, $breakpoints: $ngx-breakpoints) {
  $min: ngx-breakpoint($name, $breakpoints);
  @if $min and ngx-strip-unit($min) > 0 {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
//    >> ngx-media-breakpoint-down(480, (480: 480px, 600: 600px, 840: 840px))
//    @media (max-width: 599px) { }
@mixin ngx-media-breakpoint-down($name, $breakpoints: $ngx-breakpoints) {
  $max: ngx-breakpoint($name, $breakpoints);
  @if $max {
    @media (max-width: $max - 1) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
//    >> ngx-media-breakpoint-between(480, 600, (480: 480px, 600: 600px, 840: 840px))
//    @media (min-width: 480px) and (max-width: 839px) { }
@mixin ngx-media-breakpoint-between($lower, $upper, $breakpoints: $ngx-breakpoints) {
  @include ngx-media-breakpoint-up($lower, $breakpoints) {
    @include ngx-media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}
