@import './_variables.scss';
@import './_functions.scss';

// Applies the correct css rules to an element to give it the elevation specified by $zValue.
// The $zValue must be between 0 and 24.
@mixin ngx-elevation($zValue) {
  @if type-of($zValue) != number or not unitless($zValue) {
    @error '$zValue must be a unitless number';
  }
  @if $zValue < 0 or $zValue > 24 {
    @error '$zValue must be between 0 and 24';
  }

  #{$ngx-elevation-property}: #{map-get($_ngx-elevation-umbra-map, $zValue)},
                             #{map-get($_ngx-elevation-penumbra-map, $zValue)},
                             #{map-get($_ngx-elevation-ambient-map, $zValue)};
}

// Applies the correct css rules needed to have an element transition between elevations.
// This mixin should be applied to elements whose elevation values will change depending on their
// context (e.g. when active or disabled).
//
// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can
// be used in the same way by clients.
@mixin ngx-elevation-transition(
    $duration: $ngx-elevation-transition-duration,
    $easing: $ngx-elevation-transition-timing-function) {
  transition: ngx-elevation-transition-property-value($duration, $easing);
  will-change: $ngx-elevation-property;
}
