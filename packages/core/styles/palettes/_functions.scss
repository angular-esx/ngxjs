// For a given hue in a palette, return the contrast color from the map of contrast palettes.
@function ngx-color-contrast($palette, $hue, $opacity: null) {
  $_contrast: map-get(map-get($palette, contrasts), $hue);
  $_opacity: if($opacity, $opacity, map-get($_contrast, opacity));

  @return rgba(map-get($_contrast, color), $_opacity);
}

// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured
// hues (default, lighter, darker), or any of the aforementioned prefixed with "-contrast".
//
// @param $palette The palette (base palettes or output of @function ngx-palette).
// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will be treated as opacity.
// @param $opacity The alpha channel value for the color.
@function ngx-color($palette, $hue, $opacity: 1) {
  @return rgba(map-get($palette, $hue), $opacity);
}
