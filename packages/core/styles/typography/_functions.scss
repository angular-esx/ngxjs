// Increse spaces base on $ngx-baseline-space then convert result to rem
@function ngx-space(
  $increase,
  $root-font-size: $ngx-root-font-size,
  $baseline-space: $ngx-baseline-space
) {
  $_root-font-size: ngx-strip-unit($root-font-size);

  @return ngx-to-rem(
    ngx-strip-unit($baseline-space) * $increase,
    $_root-font-size,
    $_root-font-size / ngx-strip-unit($_ngx-font-size)
  );
}
// Convert specific font-size to rem base on $ngx-root-font-size
@function ngx-font-size($font-size, $root-font-size: $ngx-root-font-size) {
  @return ngx-to-rem(
    $font-size,
    $root-font-size,
    ngx-strip-unit($root-font-size) / ngx-strip-unit($_ngx-font-size)
  );
}

@function ngx-font-weight($font-weight-key, $font-weights: $ngx-font-weights) {
  @return map-get($font-weights, $font-weight-key);
}
// Calculate letter-spacing
@function ngx-letter-spacing($tracking) {
  @return if($tracking,  ($tracking / 1000) * 1em, null);
}

@function ngx-typos(
  $script-type: $ngx-default-script-type,
  $typos: (english: $ngx-english-script-typos, dense: $ngx-dense-script-typos, tall: $ngx-tall-script-typos)
) {
  @return map-get($typos , $script-type);
}

@function ngx-typo(
  $typo-key,
  $script-type: $ngx-default-script-type,
  $typos: ngx-typos($script-type)
) {
  @if not $typos { @return null; }

  $typo: map-get($typos, $typo-key);

  @return if($typo, $typo, null);
}
